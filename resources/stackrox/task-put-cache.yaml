apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: put-cache
spec:
  description: |
    Puts a diretory tree into object storage using the given cache key
    and bucket name.  The task puts the tree in .tar.zst file format.
    This task is designed to work with the fetch-cache task.
  params:
  - name: HASHED_FILE_PATH
    description: Path to file in source repository to hash to compute cache key
    type: string
  - name: S3_URL
    description: URL to object storage.
    default: http://minio:9000
  - name: AWS_ACCESS_KEY_ID
    description: Also known as username (minio)
    default: minioadmin
  - name: AWS_SECRET_ACCESS_KEY
    description: Also known as passowrd (minio)
    default: minioadmin
  - name: BUCKET_NAME
    description: Name of bucket that stores the caches
  - name: BUILDER_IMAGE
    description: Builder image spec
  steps:
  - name: build-and-push
    image: $(params.BUILDER_IMAGE)
    script: |
      #!/usr/bin/env bash
      set -x
      cache_key=$(params.BUCKET_NAME)-$(sha256sum $(workspaces.shared-data.path)/source/$(params.HASHED_FILE_PATH) | cut -f 1 -d ' ')
      mc --config-dir=$(workspaces.shared-data.path)/.mc alias set minio $(params.S3_URL) $(params.AWS_ACCESS_KEY_ID) $(params.AWS_SECRET_ACCESS_KEY)
      mc --config-dir=$(workspaces.shared-data.path)/.mc stat minio/$(params.BUCKET_NAME)/$cache_key
      if [[ "$?" != "0" ]]; then
        tar cf $(workspaces.shared-data.path)/$cache_key.tar.zst --zstd $(workspaces.shared-data.path)/$(params.BUCKET_NAME)/
        mc --config-dir=$(workspaces.shared-data.path)/.mc put $(workspaces.shared-data.path)/$cache_key.tar.zst minio/$(params.BUCKET_NAME)/$cache_key 
        rm $cache_key.tar.zst
      fi
    workingDir: $(workspaces.shared-data.path)
  workspaces:
  - name: shared-data
